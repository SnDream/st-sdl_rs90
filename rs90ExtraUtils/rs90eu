#!/bin/sh
RS90EU_PATH=$(dirname $(realpath $0))
RS90EU_INS_PATH=$(realpath ~/.rs90ExtraUtils)
OPK_LOOP_DEVICE=$(df "${RS90EU_PATH}" | tail -1 | awk -F ' |/' '{print $3}')
OPK_PATH=$(cat /sys/block/${OPK_LOOP_DEVICE}/loop/backing_file 2>/dev/null)

main() {
	[ -n "${OPK_PATH}" ] || {
		dialog --msgbox "Please run it on st! \n" 0 0
		return 1
	}
	until main_menu
	do
		case "$?" in
		1) install_swclock ;;
		2) remove_swclock ;;
		3) set_timezone ;;
		4) install_chinese ;;
		5) remove_chinese ;;
		6) return 0 ;;
		esac
	done
}

main_menu() {
	local info1="rs90ExtraUtils for RetroMini (C) 2021 SnDream\n[D-Pad]: Move/+/-   [A]/[R]: Confirm   [Start]: TAB"
	local menusel
	dialog --begin 21  0 --keep-window --infobox "${info1}"  4 58 \
		--and-widget --menu "Select a item:" 0 0 0 \
		1 "Install Software Clock" \
		2 "Remove Software Clock" \
		3 "Set/Reset Timezone" \
		4 "Install Chinese Language File" \
		5 "Remove Chinese Language File" \
		6 "Exit" 2>/var/tmp/rs90eu_sel
	menusel=$(cat /var/tmp/rs90eu_sel)
	rm -f /var/tmp/rs90eu_sel
	[ -n "${menusel}" ] && return ${menusel}
	return 0
}

advanced_user_check() {
	[ -e ~/".gmenu2x/sections/settings/05_swclock" ] && return 0
	[ ! -e ~/".autostart" ] && [ ! -e ~/".profile" ] && return 0
	dialog --defaultno --yesno \
'WARNING! WARNING!! WARNING!!!
There are several files that may be created by you:
	~/.profile
	~/.autostart
Installing Software Clock will OVERWRITE these files.
Please backup your files before installing!!!

	Continue?' 0 0 || return
	[ -e ~/".autostart" ] && cp ~/".autostart" ~/".autostart.bak"
	[ -e ~/".profile" ] && cp ~/".profile" ~/".profile.bak"
	return 0
}

install_swclock() {
	local init_path=/media/data/local/etc/init.d

	advanced_user_check || return

	{   mkdir -p "${RS90EU_INS_PATH}" ~/".gmenu2x/sections/settings" &&
		echo "params=-m swclock.hide.desktop \"${OPK_PATH}\"" | cat "${RS90EU_PATH}/swclock.gmenu2x" - \
				> ~/".gmenu2x/sections/settings/05_swclock" &&
		dialog --msgbox "Install Software Clock Success! \n" 0 0
	} || {
		dialog --msgbox "Install Software Clock Fail! \n" 0 0
	}
	dialog --yesno "Auto Load/Save Time on Power On/OFF? \n" 0 0 && {
		{   mkdir -p "${RS90EU_INS_PATH}" "${init_path}" &&
			cp "${RS90EU_PATH}/swclock" "${RS90EU_INS_PATH}/swclock" &&
			cp -f "${RS90EU_PATH}/swclock.init" "${init_path}/S05swclock.sh" &&
			dialog --msgbox "Set Auto Load/Save Success! \n" 0 0
		} || {
			dialog --msgbox "Set Auto Load/Save Fail! \n" 0 0
		}
	}
	dialog --yesno "Run Software Clock on Boot? \n" 0 0 && {
		{   echo -ne "#!/bin/sh\nOPK_FILE=${OPK_PATH}\n" | cat - "${RS90EU_PATH}/swclock.autostart" \
					> ~/".autostart" &&
			chmod +x ~/".autostart" &&
			dialog --msgbox "Install Software Clock on Boot Success! \n" 0 0
		} || {
			dialog --msgbox "Install Software Clock on Boot Fail! \n" 0 0
		}
	}
	dialog --yesno "Set Timezone now? \n" 0 0 && set_timezone
}

remove_swclock_configs() {
	local SDCARD_PATH="$(cat /proc/mounts | grep '^/dev/mmcblk0p1' | awk '{print $2}')"
	local NAND_CONF="${RS90EU_INS_PATH}/Configs/swclock.conf"
	local SDCARD_CONF="${SDCARD_PATH}/.rs90ExtraUtils/swclock.conf"
	local ret=0
	[ ! -e "${NAND_CONF}"   ] || rm -rf "${NAND_CONF}"   || ret=1
	[ ! -e "${SDCARD_CONF}" ] || rm -rf "${SDCARD_CONF}" || ret=1
	return ${ret}
}

remove_swclock() {
	local init_path=/media/data/local/etc/init.d

	advanced_user_check || return

	{   rm -f ~/".gmenu2x/sections/settings/05_swclock" &&
		rm -f "${RS90EU_INS_PATH}/swclock" &&
		rm -f "${init_path}/S05swclock.sh" &&
		rm -f ~/".autostart" &&
		rm -f ~/".profile" &&
		remove_swclock_configs &&
		dialog --msgbox "Remove Software Clock Success! \n" 0 0
	} || {
		dialog --msgbox "Remove Software Clock Fail! \n" 0 0
	}
}

set_timezone() {
	local area1= area2=

	grep -q .profile ~/.autostart || {
		dialog --msgbox "Please install Software Clock first! \n" 0 0
		return 0
	}

	until [ -n "${area2}" ]
	do
		dialog --menu "Select Area:" 0 0 0 \
			Etc     "(Common)" \
			Africa  "" \
			America "" \
			Asia    "" \
			Europe  "" \
			Pacific "" \
			UTC     "(Default)" 2>/var/tmp/tz_sel
		area1=$(cat /var/tmp/tz_sel)
		rm -f /var/tmp/tz_sel
		[ -n "${area1}" ] || {
			dialog --msgbox "Set Timezone is cancelled.\n" 0 0
			return 0
		}
		[ "${area1}" = "UTC" ] && {
			reset_timezone
			return
		}

		cd /usr/share/zoneinfo/posix/${area1}
		find * -type f | awk '{print $s " \"\""}' > /var/tmp/tz_area
		cd - >/dev/null 2>/dev/null

		eval dialog --menu \"Select Area:\" 0 0 0 $(cat /var/tmp/tz_area) 2>/var/tmp/tz_sel
		area2=$(cat /var/tmp/tz_sel)
		rm -f /var/tmp/tz_sel /var/tmp/tz_area
	done

	{   export TZ=${area1}/${area2} &&
		echo "export TZ=${area1}/${area2}" > ~/.profile &&
		chmod +x ~/.profile &&
		dialog --msgbox "Set Timezone to ${area1}/${area2} Success! \nTime now: $(date)" 0 0
	} || {
		dialog --msgbox "Set Timezone Fail! \n" 0 0
	}
}

reset_timezone() {
	{   export -n TZ &&
		rm -f ~/.profile &&
		dialog --msgbox "Reset Timezone to UTC Success! \nTime now: $(date)" 0 0
	} || {
		dialog --msgbox "Reset Timezone to UTC Fail! \n" 0 0
	}
}

install_chinese() {
	{   mkdir -p ~/".gmenu2x/translations" &&
		cp "${RS90EU_PATH}/Chinese.lang" ~/".gmenu2x/translations/Chinese" &&
		grep -v '^lang=' ~/".gmenu2x/gmenu2x.conf" > /var/tmp/gmenu2x.conf &&
		echo 'lang="Chinese"' >> /var/tmp/gmenu2x.conf &&
		mv /var/tmp/gmenu2x.conf ~/".gmenu2x/gmenu2x.conf" &&
		dialog --msgbox "Install Chinese Language File Success! \nManual Enable: \nSettings > Gmenu2X > Language > Chinese" 0 0
	} || {
		dialog --msgbox "Install Chinese Language File Fail! \n" 0 0
	}
}

remove_chinese() {
	{	rm -f ~/".gmenu2x/translations/Chinese" &&
		rmdir --ignore-fail-on-non-empty ~/".gmenu2x/translations" &&
		dialog --msgbox "Remove Chinese Language File Success! \n" 0 0
	} || {
		dialog --msgbox "Remove Chinese Language File Fail! \n" 0 0
	}
}

main "$@"
